#!/bin/bash

# üîê Script SEGURO para Criar Usu√°rio Admin
# Este script cria admin diretamente no Supabase (n√£o usa API p√∫blica)

echo "=================================================="
echo "üîê CRIAR USU√ÅRIO ADMINISTRADOR (VIA SUPABASE)"
echo "=================================================="
echo ""
echo "‚ö†Ô∏è  Este script cria o admin DIRETAMENTE no Supabase"
echo "    Voc√™ precisa das credenciais do Supabase"
echo ""

# Carregar vari√°veis de ambiente
if [ -f "apps/web/.env.local" ]; then
    export $(cat apps/web/.env.local | grep -v '^#' | xargs)
elif [ -f ".env.local" ]; then
    export $(cat .env.local | grep -v '^#' | xargs)
else
    echo "‚ùå Arquivo .env.local n√£o encontrado"
    exit 1
fi

# Verificar se tem as vari√°veis necess√°rias
if [ -z "$NEXT_PUBLIC_SUPABASE_URL" ] || [ -z "$SUPABASE_SERVICE_ROLE_KEY" ]; then
    echo "‚ùå Vari√°veis de ambiente n√£o configuradas"
    echo "   Verifique se NEXT_PUBLIC_SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY"
    echo "   est√£o no arquivo .env.local"
    exit 1
fi

echo "‚úÖ Vari√°veis de ambiente carregadas"
echo ""

# Solicitar dados do admin
read -p "üìß Email do admin: " EMAIL
read -s -p "üîí Senha (min 6 caracteres): " PASSWORD
echo ""
read -p "üë§ Nome completo: " NOME

echo ""
echo "üìã Confirma√ß√£o:"
echo "   Email: $EMAIL"
echo "   Nome: $NOME"
echo ""

read -p "‚ùì Confirma a cria√ß√£o? (s/N): " CONFIRM

if [ "$CONFIRM" != "s" ] && [ "$CONFIRM" != "S" ]; then
    echo "‚ùå Cancelado pelo usu√°rio"
    exit 0
fi

echo ""
echo "üîÑ Criando usu√°rio admin no Supabase..."
echo ""

# Gerar UUID para o usu√°rio
USER_ID=$(uuidgen | tr '[:upper:]' '[:lower:]')

# 1. Criar usu√°rio no Supabase Auth usando Admin API
echo "üìù Passo 1: Criando usu√°rio no Supabase Auth..."

AUTH_RESPONSE=$(curl -s -X POST "$NEXT_PUBLIC_SUPABASE_URL/auth/v1/admin/users" \
  -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
  -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
  -H "Content-Type: application/json" \
  -d "{
    \"email\": \"$EMAIL\",
    \"password\": \"$PASSWORD\",
    \"email_confirm\": true,
    \"user_metadata\": {
      \"nome\": \"$NOME\",
      \"userType\": \"admin\"
    }
  }")

# Verificar se criou com sucesso
if echo "$AUTH_RESPONSE" | grep -q '"id"'; then
    USER_ID=$(echo "$AUTH_RESPONSE" | grep -o '"id":"[^"]*"' | head -1 | cut -d'"' -f4)
    echo "   ‚úÖ Usu√°rio criado no Auth (ID: ${USER_ID:0:8}...)"
else
    echo "   ‚ùå Erro ao criar no Auth:"
    echo "$AUTH_RESPONSE"
    exit 1
fi

# 2. Inserir na tabela users
echo "üìù Passo 2: Inserindo na tabela users..."

DB_RESPONSE=$(curl -s -X POST "$NEXT_PUBLIC_SUPABASE_URL/rest/v1/users" \
  -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
  -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
  -H "Content-Type: application/json" \
  -H "Prefer: return=representation" \
  -d "{
    \"id\": \"$USER_ID\",
    \"email\": \"$EMAIL\",
    \"nome\": \"$NOME\",
    \"user_type\": \"admin\"
  }")

# Verificar se inseriu com sucesso
if echo "$DB_RESPONSE" | grep -q '"user_type":"admin"'; then
    echo "   ‚úÖ Perfil admin criado na tabela users"
else
    echo "   ‚ùå Erro ao inserir na tabela users:"
    echo "$DB_RESPONSE"
    echo ""
    echo "   ‚ö†Ô∏è  Usu√°rio foi criado no Auth mas n√£o na tabela users"
    echo "   Execute este SQL no Supabase Dashboard:"
    echo ""
    echo "   INSERT INTO users (id, email, nome, user_type)"
    echo "   VALUES ('$USER_ID', '$EMAIL', '$NOME', 'admin');"
    exit 1
fi

echo ""
echo "=================================================="
echo "‚úÖ ADMIN CRIADO COM SUCESSO!"
echo "=================================================="
echo ""
echo "üìã Credenciais:"
echo "   Email: $EMAIL"
echo "   Senha: (a que voc√™ digitou)"
echo "   Tipo: Admin"
echo ""
echo "üåê Pr√≥ximos passos:"
echo "   1. Acesse: http://localhost:3000/login"
echo "   2. Use o email e senha criados"
echo "   3. Voc√™ ser√° redirecionado para: /admin"
echo ""
echo "=================================================="
